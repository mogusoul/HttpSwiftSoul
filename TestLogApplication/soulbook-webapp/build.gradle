apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'idea'
apply plugin: 'eclipse'




version = '1.0.1'


jar {
//    baseName = 'helloworld'
//    version =  '0.1.0'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
//        attributes 'Main-Class': 'com.mogusoul.net.starts.SystemApplication'
//        attributes 'Main-Class': 'com.mogusoul.net.application.Application'
    }
}


/*将src/main/java编译的class打包成${project.name}-${version}.jar放入到build/libs目录下,配置文件没必要打包*/
task jarWithoutResources(type: Jar) {
    baseName project.name
    from("$buildDir/classes/main")
}
/*1.将$projectDir/resources下的配置文件(生产上的配置文件)拷贝到WEB-INF/classes目录,不打包是为了方便修改配置*/
/*2.将sourceSet.main下面编译的文件和资源文件剔除:*/
//classpath=classpath - files("$buildDir/classes/main")
//classpath=classpath - files("$buildDir/resources/main")
/*3.将前一步打包的jar文件放入WEB-INF/lib目录下*/
//war{
//    dependsOn jarWithoutResources
//    from("$projectDir/src/main/servRes") {
//        include "*.properties"
//        into("WEB-INF/classes")
//    }
//    classpath=classpath - sourceSets.main.output
//    classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")
//}

jettyRun{
    webAppSourceDirectory file("$projectDir/src/main/webapp")
    httpPort 8088
    contextPath "soulbooks"
    scanIntervalSeconds 0
    reload "automatic"
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'





















buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/release" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE")
    }
}


repositories {
    jcenter()
    maven { url "http://repo.spring.io/release" }
    mavenCentral()

    flatDir {
        dirs 'lib-xo'
    }
}








dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])


//    compile 'org.springframework.boot:spring-boot-starter-jdbc:1.3.6.RELEASE'
    compile "org.springframework.boot:spring-boot-starter-web:1.3.6.RELEASE"


//    compile "org.springframework:spring-aop:4.2.7.RELEASE"
//    compile "org.springframework:spring-bean:4.2.7.RELEASE"
//    compile "org.springframework:spring-core:4.2.7.RELEASE"
//    compile "org.springframework:spring-context:4.2.7.RELEASE"
//    compile "org.springframework:spring-expression:4.2.7.RELEASE"
//    compile "org.springframework:spring-web:4.2.7.RELEASE"
    compile "org.springframework:spring-webmvc:4.2.7.RELEASE"
//    compile "org.springframework:spring-context:4.2.7.RELEASE"

    compile "commons-io:commons-io:+"

    compile "org.aspectj:aspectjrt:1.8.9"
    compile "org.aspectj:aspectjweaver:1.8.9"


    compile 'org.mybatis:mybatis-spring:1.2.2'
    compile 'org.mybatis:mybatis:3.2.8'
    compile 'mysql:mysql-connector-java:5.1.34'
    compile 'commons-dbcp:commons-dbcp:1.4'

    compile 'log4j:log4j:1.2.17'


//    compile 'javax.servlet:servlet-api:2.5'

//    providedCompile 'javax.servlet:servlet-api:2.5'
//    runtime 'javax.servlet:jstl:1.1.2'

    testCompile 'junit:junit:4.12'
}